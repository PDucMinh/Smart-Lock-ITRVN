@startuml sys_manager
hide empty description

[*] --> SYS_STATE_SLEEP
SYS_STATE_SLEEP --> SYS_STATE_DISPLAY_MENU : sys_keypad_event = KEYPAD_WAKEUP
SYS_STATE_DISPLAY_MENU --> SYS_STATE_SLEEP : sys_display_event = DISPLAY_TIMEOUT
SYS_STATE_DISPLAY_MENU --> SYS_STATE_OPT_1 : sys_keypad_event = KEYPAD_BUTTON_1
SYS_STATE_DISPLAY_MENU --> SYS_STATE_OPT_2 : sys_keypad_event = KEYPAD_BUTTON_2
SYS_STATE_DISPLAY_MENU --> SYS_STATE_OPT_3 : sys_keypad_event = KEYPAD_BUTTON_3
SYS_STATE_DISPLAY_MENU --> SYS_STATE_OPT_4 : sys_keypad_event = KEYPAD_BUTTON_4
SYS_STATE_DISPLAY_MENU --> SYS_STATE_OPT_5 : sys_keypad_event = KEYPAD_BUTTON_5
SYS_STATE_OPT_1 --> SYS_STATE_DISPLAY_LOCK : sys_lock_event = DOOR_LOCKED
SYS_STATE_DISPLAY_LOCK --> SYS_STATE_DISPLAY_MENU : sys_display_event = DISPLAY_TIMEOUT
SYS_STATE_OPT_2 --> SYS_STATE_DISPLAY_ENTER_PASS
SYS_STATE_OPT_3 --> SYS_STATE_DISPLAY_ENTER_PASS 
SYS_STATE_OPT_4 --> SYS_STATE_DISPLAY_ENTER_PASS
SYS_STATE_OPT_5 --> SYS_STATE_DISPLAY_ENTER_PASS
SYS_STATE_DISPLAY_ENTER_PASS --> SYS_STATE_DISPLAY_PASS: sys_keypad_event = KEYPAD_BUTTON_CHAR_DEL
SYS_STATE_DISPLAY_ENTER_PASS --> SYS_STATE_DISPLAY_MENU : sys_display_event = DISPLAY_TIMEOUT
SYS_STATE_DISPLAY_PASS --> SYS_STATE_DISPLAY_MENU : sys_display_event = DISPLAY_TIMEOUT
SYS_STATE_DISPLAY_PASS --> SYS_STATE_LOAD_USER : sys_keypad_event = KEYPAD_BUTTON_ENTER\nmode_flag = SET_PASSWORD or mode_flag = ENTER_PASSWORD\nnew_pass_flag = 0
SYS_STATE_LOAD_USER --> SYS_STATE_PROCESS_PASS : sys_log_event = LOG_ALL_USER
SYS_STATE_DISPLAY_PASS --> SYS_STATE_LOAD_ADMIN : sys_keypad_event = KEYPAD_BUTTON_ENTER\nmode_flag = GET_INFO or mode_flag = SET_INFO
SYS_STATE_LOAD_ADMIN --> SYS_STATE_PROCESS_ID : sys_log_event = LOG_ADMIN
SYS_STATE_PROCESS_ID --> SYS_STATE_DISPLAY_RIGHT : id correct
SYS_STATE_PROCESS_PASS --> SYS_STATE_DISPLAY_RIGHT : password correct
SYS_STATE_DISPLAY_RIGHT --> SYS_STATE_DISPLAY_MENU : sys_lock_event = DOOR_UNLOCKED
SYS_STATE_DISPLAY_MENU --> SYS_STATE_DISPLAY_ALARM : sys_lock_event = DOOR_ALARM
SYS_STATE_DISPLAY_ALARM --> SYS_STATE_DISPLAY_MENU : sys_lock_event = DOOR_UNLOCKED

SYS_STATE_PROCESS_PASS --> SYS_STATE_DISPLAY_WRONG : password incorrect
SYS_STATE_PROCESS_ID --> SYS_STATE_DISPLAY_WRONG : id incorrect
SYS_STATE_DISPLAY_WRONG --> SYS_STATE_DISPLAY_ENTER_PASS : incorrect_cnt < 3\nsys_keypad_event = KEYPAD_BUTTON_ENTER
SYS_STATE_DISPLAY_WRONG --> SYS_STATE_DISPLAY_BLOCKED : incorrect_cnt > 3
SYS_STATE_DISPLAY_WRONG --> SYS_STATE_DISPLAY_MENU : sys_display_event = DISPLAY_TIMEOUT
SYS_STATE_DISPLAY_BLOCKED --> SYS_STATE_DOUBLE_LOCKED : sys_lock_event = DOOR_DOUBLE_LOCKED
SYS_STATE_DOUBLE_LOCKED --> SYS_STATE_SLEEP : sys_lock_event = DOOR_LOCKED

SYS_STATE_DISPLAY_RIGHT --> SYS_STATE_DISPLAY_SET_PASS: mode_flag = SET_PASSSWORD
SYS_STATE_DISPLAY_SET_PASS --> SYS_STATE_DISPLAY_PASS : sys_keypad_event = KEYPAD_BUTTON_CHAR_DEL
SYS_STATE_DISPLAY_PASS --> SYS_STATE_STORE_PASS : sys_keypad_event = KEYPAD_BUTTON_ENTER\nnew_pass_flag = 1
SYS_STATE_STORE_PASS --> SYS_STATE_DISPLAY_MENU : sys_display_event = DISPLAY_TIMEOUT

SYS_STATE_DISPLAY_RIGHT --> SYS_STATE_LOAD_ALL: mode_flag = GET_INFO\nmode_flag = SET_INFO
SYS_STATE_LOAD_ALL --> SYS_STATE_READY_INFO : sys_log_event = LOG_ALL
SYS_STATE_READY_INFO --> SYS_STATE_PROTOCOL_SEND_INFO : sys_protocol_event = PROTOCOL_SEND
SYS_STATE_PROTOCOL_SEND_INFO --> SYS_STATE_DISPLAY_MENU : sys_protocol_event = PROTOCOL_COMPLETE
SYS_STATE_PROTOCOL_SEND_INFO --> SYS_STATE_PROTOCOL_RECEIVE_INFO : sys_protocol_event = PROTOCOL_RECEIVE
SYS_STATE_PROTOCOL_RECEIVE_INFO --> SYS_STATE_STORE_INFO : sys_protocol_event = PROTOCOL_COMPLETE
SYS_STATE_STORE_INFO --> SYS_STATE_DISPLAY_MENU : sys_log_event = LOG_SET_COMPLETE

SYS_STATE_STORE_INFO : sys_log_req = LOG_SET_USER
SYS_STATE_PROTOCOL_RECEIVE_INFO : sys_log_req = LOG_ERASE_USER\nreceive data from sys_protocol
SYS_STATE_PROTOCOL_SEND_INFO : create sys_display_req = DISPLAY_TRANSFER_INFO\nsys_protocol_req = PROTOCOL_INFO\nsend data to sys_protocol
SYS_STATE_READY_INFO: sys_log_req = LOG_ERASE_ACCESS\ncreate sys_protocol_req = PROTOCOL_ACCEPT_GUI
SYS_STATE_LOAD_ALL : create sys_log_req = LOG_GET_ALL
SYS_STATE_STORE_PASS : update new password\nsys_log_req = LOG_SET_USER\ncreate sys_display_req = DISPLAY_NOTIFY_COMPLETE
SYS_STATE_DISPLAY_SET_PASS : create sys_display_req = DISPLAY_SET_PASS\nsys_keypad_req = KEYPAD_PASS\nsys_log_req = LOG_ERASE_USER\nset new_pass_flag
SYS_STATE_DOUBLE_LOCKED : create sys_display_req = DISPLAY_OFF
SYS_STATE_DISPLAY_BLOCKED : create sys_lock_req = LOCK_DOUBLE_LOCK\nsys_display_req = DISPLAY_BLOCKED\nsys_notify_req = NOTIFY_DOUBLE_LOCK\nsys_log_req = LOG_SET_ACCESS
SYS_STATE_DISPLAY_ALARM : create sys_notify_req = NOTIFY_ALARM\nsys_display_notify = DISPLAY_NOTIFY_ALARM
SYS_STATE_DISPLAY_WRONG : create sys_notify_req = NOTIFY_INCORRECT\nincrease incorrect_cnt\nsys_display_req = DISPLAY_NOTIFY_INCORRECT\nsys_log_req = LOG_SET_ACCESS\nsys_keypad_req = KEYPAD_RETRY
SYS_STATE_DISPLAY_RIGHT : if (mode_flag = ENTER_PASSWORD)\n{sys_lock_req = LOCK_OPEN}\ncreate sys_notify_req = NOTIFY_CORRECT\nsys_display_req = DISPLAY_NOTIY_CORRECT\nsys_log_req = LOG_SET_ACCESS
SYS_STATE_PROCESS_ID : extract and decode password field\ncompare with password from sys_keypad
SYS_STATE_PROCESS_PASS : extract and decode password field\ncompare with password from sys_keypad
SYS_STATE_LOAD_ADMIN : create sys_log_req = LOG_GET_ADMIN
SYS_STATE_LOAD_USER :create sys_log_req = LOG_GET_ALL_USER
SYS_STATE_DISPLAY_PASS : create sys_display_req = DISPLAY_PASS
SYS_STATE_DISPLAY_ENTER_PASS : create sys_display_req = DISPLAY_ENTER_PASS\nsys_keypad_req = KEYPAD_PASS
SYS_STATE_OPT_5 : set mode_flag = SET_INFO
SYS_STATE_OPT_4 : set mode_flag = GET_INFO
SYS_STATE_OPT_3 : set mode_flag = SET_PASSWORD
SYS_STATE_OPT_2 : set mode_flag = ENTER_PASSWORD
SYS_STATE_DISPLAY_LOCK : create sys_display_req = DISPLAY_LOCK\nsys_notify_req = NOTIFY_LOCK
SYS_STATE_OPT_1 : create sys_lock_req = LOCK_CLOSE
SYS_STATE_DISPLAY_MENU : create sys_display_req = DISPLAY_MENU\nsys_notify_req = NOTIFY_OFF\nsys_keypad_req = KEYPAD_MENU\nreset incorrect_cnt\nreset new_pass_flag
SYS_STATE_SLEEP : create sys_display_req = DISPLAY_OFF\nsys_keypad_req = KEYPAD_SLEEP
@enduml